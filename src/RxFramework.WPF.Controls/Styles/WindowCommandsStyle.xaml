<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:RxBehaviors="clr-namespace:RxFramework.WPF.FluentControls.Behaviors"
    xmlns:RxWindow="clr-namespace:RxFramework.WPF.FluentControls.Windowing"
    xmlns:rx="https://reactivesolution.de/RxFramework/WPF">


    <ControlTemplate x:Key="WindowCommandButton" TargetType="{x:Type Button}">
        <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
            <ContentPresenter
                x:Name="contentPresenter"
                Margin="11,1,11,1"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                TextBlock.FontFamily="{TemplateBinding FontFamily}"
                TextBlock.FontSize="12" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter TargetName="contentPresenter" Property="Opacity" Value=".75" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True" />
            <Trigger Property="ToggleButton.IsChecked" Value="True" />
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style x:Key="WindowCommandButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template" Value="{StaticResource WindowCommandButton}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static rx:BrushKeys.FontPrimary}}" />
        <Style.Triggers>
            <Trigger Property="RxBehaviors:NonClientControlProperties.IsNCMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static rx:BrushKeys.BackgroundSecondary}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="WindowCommandCloseButtonStyle"
        BasedOn="{StaticResource WindowCommandButtonStyle}"
        TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="RxBehaviors:NonClientControlProperties.IsNCMouseOver" Value="True">
                <Setter Property="Background" Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type RxWindow:WindowCommands}" TargetType="{x:Type RxWindow:WindowCommands}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RxWindow:WindowCommands}">
                    <StackPanel Orientation="Horizontal">
                        <Button
                            x:Name="PART_MinimizeCommand"
                            Padding="8,5"
                            RxBehaviors:NonClientControlProperties.ClickStrategy="MouseEvent"
                            RxBehaviors:NonClientControlProperties.HitTestResult="MINBUTTON"
                            Focusable="False"
                            SnapsToDevicePixels="True"
                            Style="{StaticResource WindowCommandButtonStyle}"
                            Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RxWindow:FluentWindow}, Path=ShowMinButton, Converter={rx:BoolToVisibilityConverter}}">
                            <Path
                                Width="16"
                                Height="16"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="F1M3,8L13,8 13,7 3,7z"
                                Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" />
                        </Button>

                        <Button
                            x:Name="PART_MaximizeCommand"
                            Padding="8,5"
                            RxBehaviors:NonClientControlProperties.ClickStrategy="MouseEvent"
                            RxBehaviors:NonClientControlProperties.HitTestResult="MAXBUTTON"
                            Focusable="False"
                            SnapsToDevicePixels="True"
                            Style="{StaticResource WindowCommandButtonStyle}"
                            Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RxWindow:FluentWindow}, Path=ShowMaxRestoreButton, Converter={rx:BoolToVisibilityConverter}}">
                            <Path
                                Width="16"
                                Height="16"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="F1M12,12L4,12 4,4 12,4z M3,13L13,13 13,3 3,3z"
                                Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" />
                        </Button>

                        <Button
                            x:Name="PART_RestoreCommand"
                            Padding="8,5"
                            RxBehaviors:NonClientControlProperties.ClickStrategy="MouseEvent"
                            RxBehaviors:NonClientControlProperties.HitTestResult="MAXBUTTON"
                            Focusable="False"
                            SnapsToDevicePixels="True"
                            Style="{StaticResource WindowCommandButtonStyle}"
                            Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RxWindow:FluentWindow}, Path=ShowMaxRestoreButton, Converter={rx:BoolToVisibilityConverter}}">
                            <Path
                                Width="16"
                                Height="16"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="F1M11.999,10.002L10.998,10.002 10.998,5.002 5.998,5.002 5.998,4.001 11.999,4.001z M10.002,11.999L4.001,11.999 4.001,5.998 10.002,5.998z M5.002,3L5.002,5.002 3,5.002 3,13 10.998,13 10.998,10.998 13,10.998 13,3z"
                                Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" />
                        </Button>

                        <Button
                            x:Name="PART_CloseCommand"
                            Padding="8,5"
                            RxBehaviors:NonClientControlProperties.ClickStrategy="MouseEvent"
                            RxBehaviors:NonClientControlProperties.HitTestResult="CLOSE"
                            Focusable="False"
                            SnapsToDevicePixels="True"
                            Style="{StaticResource WindowCommandCloseButtonStyle}">
                            <Path
                                Width="16"
                                Height="16"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="F1M8.583,8L13,12.424 12.424,13 8,8.583 3.576,13 3,12.424 7.417,8 3,3.576 3.576,3 8,7.417 12.424,3 13,3.576z"
                                Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" />
                        </Button>

                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ResizeMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="NoResize">
                            <Setter TargetName="PART_MaximizeCommand" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_MinimizeCommand" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_RestoreCommand" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="Maximized">
                            <Setter TargetName="PART_MaximizeCommand" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="Normal">
                            <Setter TargetName="PART_RestoreCommand" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ResizeMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="CanMinimize">
                            <Setter TargetName="PART_MaximizeCommand" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_RestoreCommand" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsPressed, ElementName=PART_CloseCommand}" Value="True">
                            <Setter TargetName="PART_CloseCommand" Property="Background" Value="DarkRed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>