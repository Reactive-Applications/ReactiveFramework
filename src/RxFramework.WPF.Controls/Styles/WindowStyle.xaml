<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:RxFramework.WPF.FluentControls.Windowing"
    xmlns:rx="https://reactivesolution.de/RxFramework/WPF"
    xmlns:rxBehaviors="clr-namespace:RxFramework.WPF.FluentControls.Behaviors">

    <Style x:Key="{x:Type local:FluentWindow}" TargetType="{x:Type local:FluentWindow}">
        <Setter Property="Template" Value="{StaticResource WindowControlTemplate}" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="Background" Value="{DynamicResource {x:Static rx:BrushKeys.ApplicationBackground}}" />
        <Setter Property="MinWidth" Value="215" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="NCActiveBrush" Value="{Binding Background, RelativeSource={RelativeSource Self}}" />
        <Setter Property="NCCurrentBrush" Value="{Binding NCActiveBrush, RelativeSource={RelativeSource Self}}" />
        <Setter Property="NCNonActiveBrush" Value="{Binding Source={x:Static SystemColors.WindowFrameBrush}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FluentWindow}">
                    <Grid
                        MinWidth="{TemplateBinding MinWidth}"
                        LayoutTransform="{Binding LayoutTransform, RelativeSource={RelativeSource TemplatedParent}}"
                        RenderTransform="{Binding RenderTransform, RelativeSource={RelativeSource TemplatedParent}}">
                        <AdornerDecorator x:Name="Adorner">
                            <Grid
                                x:Name="WindowRoot"
                                MinWidth="{TemplateBinding MinWidth}"
                                Background="{TemplateBinding Background}">

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Grid
                                    x:Name="HeaderRootGrid"
                                    Grid.Row="0"
                                    Height="{TemplateBinding HeaderHeight}"
                                    Background="{TemplateBinding Background}">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>

                                    <ContentPresenter
                                        x:Name="Header"
                                        local:WindowChrome.IsHitTestVisibleInChrome="False"
                                        Content="{TemplateBinding Header}" />
                                    <ContentPresenter
                                        Grid.Column="1"
                                        local:WindowChrome.IsHitTestVisibleInChrome="False"
                                        Content="{TemplateBinding WindowCommands}" />
                                </Grid>

                                <ContentPresenter
                                    x:Name="PART_ContentPresenter"
                                    Grid.Row="1"
                                    Content="{TemplateBinding Content}" />

                            </Grid>
                        </AdornerDecorator>

                        <Border
                            x:Name="PART_Border"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            UseLayoutRounding="True" />

                        <ResizeGrip
                            x:Name="WindowResizeGrip"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            IsTabStop="false"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="Margin" Value="0" />
                        </Trigger>
                        <Trigger Property="IsNCActive" Value="False">
                            <Setter Property="NCCurrentBrush" Value="{Binding NCNonActiveBrush, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="CanDragMove" Value="True">
                            <Setter TargetName="Header" Property="rxBehaviors:NonClientControlProperties.HitTestResult" Value="CAPTION" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>