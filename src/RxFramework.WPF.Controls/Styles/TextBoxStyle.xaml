<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:RxFramework.WPF.FluentControls.Text"
    xmlns:rx="https://reactivesolution.de/RxFramework/WPF">

    <Style x:Key="DefaultScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid>
                        <ScrollContentPresenter Margin="0" CanContentScroll="{TemplateBinding CanContentScroll}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:TextBox}">
        <Setter Property="BorderThickness" Value="1,1,1,0" />
        <Setter Property="Indicator" Value="{DynamicResource {x:Static rx:BrushKeys.StrokePrimary}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static rx:BrushKeys.ElevationBorder}}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static rx:BrushKeys.FontPrimary}}" />
        <Setter Property="CaretBrush" Value="{DynamicResource {x:Static rx:BrushKeys.FontPrimary}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static rx:BrushKeys.BackgroundPrimary}}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Font" Value="{DynamicResource {x:Static rx:FontKeys.Body}}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="LabelMargin" Value="0,5" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="MinWidth" Value="150" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TextBox}">
                    <DockPanel
                        Margin="{TemplateBinding Margin}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Background="Transparent">

                        <TextBlock
                            x:Name="Label"
                            Margin="{TemplateBinding LabelMargin}"
                            VerticalAlignment="Center"
                            DockPanel.Dock="{TemplateBinding LabelPosition}"
                            Text="{TemplateBinding Label}"
                            Visibility="{TemplateBinding Label,
                                                         Converter={rx:HideWhenEmptyConverter}}" />

                        <Grid>
                            <Border
                                x:Name="ContentBorder"
                                MinWidth="{TemplateBinding MinWidth}"
                                MinHeight="{TemplateBinding MinHeight}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Cursor="IBeam">
                                <Grid Margin="{TemplateBinding Padding}">

                                    <TextBlock
                                        x:Name="PlaceholderText"
                                        Margin="0"
                                        Padding="1,0"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Foreground="{DynamicResource {x:Static rx:BrushKeys.FontPlaceholder}}"
                                        Text="{TemplateBinding PlaceholderText}"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Text, Converter={rx:HideWhenEmptyConverter}, ConverterParameter=true}" />

                                    <ScrollViewer
                                        x:Name="PART_ContentHost"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                        HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"
                                        IsTabStop="{TemplateBinding ScrollViewer.IsTabStop}"
                                        Style="{StaticResource DefaultScrollViewerStyle}"
                                        TextElement.FontFamily="{TemplateBinding FontFamily}"
                                        TextElement.FontSize="{TemplateBinding FontSize}"
                                        TextElement.FontStretch="{TemplateBinding FontStretch}"
                                        TextElement.FontStyle="{TemplateBinding FontStyle}"
                                        TextElement.FontWeight="{TemplateBinding FontWeight}"
                                        TextElement.Foreground="{TemplateBinding Foreground}"
                                        VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}" />

                                </Grid>
                            </Border>
                            <Border
                                x:Name="Indicator"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                BorderBrush="{TemplateBinding Indicator}"
                                BorderThickness="0,0,0,1"
                                CornerRadius="{TemplateBinding CornerRadius}" />
                        </Grid>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowPlaceholderText" Value="False">
                            <Setter TargetName="PlaceholderText" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ShowLabel" Value="False">
                            <Setter TargetName="Label" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Indicator" Property="BorderThickness" Value="0,0,0,2" />
                            <Setter TargetName="Indicator" Property="BorderBrush" Value="{DynamicResource {x:Static rx:BrushKeys.AccentPrimary}}" />
                            <Setter Property="Background" Value="{DynamicResource {x:Static rx:BrushKeys.BackgroundInputActive}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="true" />
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsFocused" Value="false" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="{DynamicResource {x:Static rx:BrushKeys.BackgroundSecondary}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Cursor" Value="Arrow" />
                            <Setter Property="Background" Value="{DynamicResource {x:Static rx:BrushKeys.BackgroundDisabled}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static rx:BrushKeys.FontDisabled}}" />
                            <Setter TargetName="PlaceholderText" Property="Foreground" Value="{DynamicResource {x:Static rx:BrushKeys.FontDisabled}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>